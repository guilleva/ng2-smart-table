{"version":3,"file":"filter.component.js","sourceRoot":"","sources":["../../../../src/ng2-smart-table/components/filter/filter.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAiB,MAAM,eAAe,CAAC;AAEtF,OAAO,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,2BAA2B,CAAC;AAkCnD,IAAa,eAAe;IAhC5B;QAoCW,eAAU,GAAW,EAAE,CAAC;QAEvB,WAAM,GAAG,IAAI,YAAY,EAAO,CAAC;QAE3C,UAAK,GAAW,EAAE,CAAC;IA2BrB,CAAC;IAzBC,yCAAe,GAAf;QAAA,iBAgBC;QAfC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,UAAC,QAAQ;YACzC,IAAM,UAAU,GAAG,KAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;YAC3C,EAAE,CAAC,CAAC,UAAU,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxE,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAEhB,kFAAkF;gBAClF,sGAAsG;YACxG,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7E,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,CAAM,EAAE,CAAM;oBACxC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC9B,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC;oBACxB,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAQ,GAAR,UAAS,KAAa;QACpB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YACpB,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;YACrB,MAAM,EAAE,KAAK;YACb,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;SACxC,CAAC,CAAC;IACL,CAAC;IACH,sBAAC;AAAD,CAAC,AAnCD,IAmCC;AAjCU;IAAR,KAAK,EAAE;8BAAS,MAAM;+CAAC;AACf;IAAR,KAAK,EAAE;8BAAS,UAAU;+CAAC;AACnB;IAAR,KAAK,EAAE;;mDAAyB;AAEvB;IAAT,MAAM,EAAE;;+CAAkC;AANhC,eAAe;IAhC3B,SAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,SAAS,EAAE,CAAC,yBAAyB,CAAC;QACtC,QAAQ,EAAE,yoCA2BT;KACF,CAAC;GACW,eAAe,CAmC3B;SAnCY,eAAe","sourcesContent":["import { Component, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\n\nimport { DataSource } from '../../lib/data-source/data-source';\nimport { Column } from '../../lib/data-set/column';\n\n@Component({\n  selector: 'ng2-smart-table-filter',\n  styleUrls: ['./filter.component.scss'],\n  template: `\n    <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\n      <select-filter *ngSwitchCase=\"'list'\"\n                     [query]=\"query\"\n                     [ngClass]=\"inputClass\"\n                     [column]=\"column\"\n                     (filter)=\"onFilter($event)\">\n      </select-filter>\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\n                       [query]=\"query\"\n                       [ngClass]=\"inputClass\"\n                       [column]=\"column\"\n                       (filter)=\"onFilter($event)\">\n      </checkbox-filter>\n      <completer-filter *ngSwitchCase=\"'completer'\"\n                        [query]=\"query\"\n                        [ngClass]=\"inputClass\"\n                        [column]=\"column\"\n                        (filter)=\"onFilter($event)\">\n      </completer-filter>\n      <input-filter *ngSwitchDefault\n                    [query]=\"query\"\n                    [ngClass]=\"inputClass\"\n                    [column]=\"column\"\n                    (filter)=\"onFilter($event)\">\n      </input-filter>\n    </div>\n  `,\n})\nexport class FilterComponent implements AfterViewInit {\n\n  @Input() column: Column;\n  @Input() source: DataSource;\n  @Input() inputClass: string = '';\n\n  @Output() filter = new EventEmitter<any>();\n\n  query: string = '';\n\n  ngAfterViewInit() {\n    this.source.onChanged().subscribe((elements) => {\n      const filterConf = this.source.getFilter();\n      if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\n        this.query = '';\n\n        // add a check for existing filters an set the query if one exists for this column\n        // this covers instances where the filter is set by user code while maintaining existing functionality\n      } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\n        filterConf.filters.forEach((k: any, v: any) => {\n          if (k.field == this.column.id) {\n            this.query = k.search;\n          }\n        });\n      }\n    });\n  }\n\n  onFilter(query: string) {\n    this.source.addFilter({\n      field: this.column.id,\n      search: query,\n      filter: this.column.getFilterFunction(),\n    });\n  }\n}\n"]}